import java.util.*;
import java.io.*;

public class Solution {
 
  public static void main(String[] args) {
    Scanner s = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
    int n = s.nextInt(); //Take array size input
    int[] arr = new int[n];
    for(int i=0;i<n;i++) {
        arr[i] = s.nextInt(); //Take array elements input
    }
    int maxval = 0, ans = 0;
    Stack<Integer> stk = new Stack<>();
    stk.push(0);
    for(int i=1;i<n;i++) { //Taking ith element as the first corner of the array
	      while( !stk.isEmpty() && arr[i] >= arr[stk.peek()] ) {
		        int j = stk.peek(); //Taking jth element as the second corner of the subarray
		        int maxele = arr[i];
		        int secmaxele = arr[j];
            int val = maxele & secmaxele;
            if(maxval < val) {
	              ans = i-j+1;
		        }
            else if(maxval==val && ans > (i-j+1)) {
	              ans = i-j+1;
		        }
		        stk.pop();
        }

        if( !stk.isEmpty() ) {
	          int j = stk.peek(); //Taking jth element as the second corner of the subarray
		        int maxele = arr[j];
		        int secmaxele = arr[i];
            int val = maxele & secmaxele;
            if(maxval < val) {
	              ans = i-j+1;
		        }
            else if(maxval==val && ans > (i-j+1)) {
	              ans = i-j+1;
		        }
        }

        stk.push(i);
    }
    
    System.out.println("Length of required Subarray: "ans);
 }
 
}
